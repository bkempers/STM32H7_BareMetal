
bare_metal_Appli.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002b0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001d4  080002b0  080002b0  000012b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000484  0800048c  0000148c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000484  08000484  0000148c  2**0
                  CONTENTS
  4 .ARM          00000000  08000484  08000484  0000148c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000484  0800048c  0000148c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000484  08000484  00001484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000488  08000488  00001488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  24000000  24000000  0000148c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  24000000  0800048c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000000  20000000  00002000  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  0000148c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000005b2  00000000  00000000  000014ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000133  00000000  00000000  00001a6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00001ba0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000002d  00000000  00000000  00001be8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00023b16  00000000  00000000  00001c15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000005d6  00000000  00000000  0002572b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000cef86  00000000  00000000  00025d01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000f4c87  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000058  00000000  00000000  000f4ccc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000075  00000000  00000000  000f4d24  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002b0 <__do_global_dtors_aux>:
 80002b0:	b510      	push	{r4, lr}
 80002b2:	4c05      	ldr	r4, [pc, #20]	@ (80002c8 <__do_global_dtors_aux+0x18>)
 80002b4:	7823      	ldrb	r3, [r4, #0]
 80002b6:	b933      	cbnz	r3, 80002c6 <__do_global_dtors_aux+0x16>
 80002b8:	4b04      	ldr	r3, [pc, #16]	@ (80002cc <__do_global_dtors_aux+0x1c>)
 80002ba:	b113      	cbz	r3, 80002c2 <__do_global_dtors_aux+0x12>
 80002bc:	4804      	ldr	r0, [pc, #16]	@ (80002d0 <__do_global_dtors_aux+0x20>)
 80002be:	f3af 8000 	nop.w
 80002c2:	2301      	movs	r3, #1
 80002c4:	7023      	strb	r3, [r4, #0]
 80002c6:	bd10      	pop	{r4, pc}
 80002c8:	24000000 	.word	0x24000000
 80002cc:	00000000 	.word	0x00000000
 80002d0:	0800046c 	.word	0x0800046c

080002d4 <frame_dummy>:
 80002d4:	b508      	push	{r3, lr}
 80002d6:	4b03      	ldr	r3, [pc, #12]	@ (80002e4 <frame_dummy+0x10>)
 80002d8:	b11b      	cbz	r3, 80002e2 <frame_dummy+0xe>
 80002da:	4903      	ldr	r1, [pc, #12]	@ (80002e8 <frame_dummy+0x14>)
 80002dc:	4803      	ldr	r0, [pc, #12]	@ (80002ec <frame_dummy+0x18>)
 80002de:	f3af 8000 	nop.w
 80002e2:	bd08      	pop	{r3, pc}
 80002e4:	00000000 	.word	0x00000000
 80002e8:	24000004 	.word	0x24000004
 80002ec:	0800046c 	.word	0x0800046c

080002f0 <main>:
#define LED1_PIN              (PIN10) //PD10
#define LED2_PIN              (PIN13) //PD13
#define LED3_PIN              (PIN7) //PB7

int main(void)
{
 80002f0:	b480      	push	{r7}
 80002f2:	b085      	sub	sp, #20
 80002f4:	af00      	add	r7, sp, #0
	/* enable clock access for gpio */
	RCC->AHB4ENR |= GPIOBEN;
 80002f6:	4b32      	ldr	r3, [pc, #200]	@ (80003c0 <main+0xd0>)
 80002f8:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80002fc:	4a30      	ldr	r2, [pc, #192]	@ (80003c0 <main+0xd0>)
 80002fe:	f043 0302 	orr.w	r3, r3, #2
 8000302:	f8c2 3140 	str.w	r3, [r2, #320]	@ 0x140
	RCC->AHB4ENR |= GPIODEN;
 8000306:	4b2e      	ldr	r3, [pc, #184]	@ (80003c0 <main+0xd0>)
 8000308:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800030c:	4a2c      	ldr	r2, [pc, #176]	@ (80003c0 <main+0xd0>)
 800030e:	f043 0308 	orr.w	r3, r3, #8
 8000312:	f8c2 3140 	str.w	r3, [r2, #320]	@ 0x140

	/* set PDN as output pin */
	//PB7
	GPIOB->MODER |= (1U<<14); //set bit 20 to 1
 8000316:	4b2b      	ldr	r3, [pc, #172]	@ (80003c4 <main+0xd4>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	4a2a      	ldr	r2, [pc, #168]	@ (80003c4 <main+0xd4>)
 800031c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000320:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &=~ (1U<<15); //set bit 21 to 0
 8000322:	4b28      	ldr	r3, [pc, #160]	@ (80003c4 <main+0xd4>)
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	4a27      	ldr	r2, [pc, #156]	@ (80003c4 <main+0xd4>)
 8000328:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 800032c:	6013      	str	r3, [r2, #0]


	//PD10
	GPIOD->MODER |= (1U<<20); //set bit 20 to 1
 800032e:	4b26      	ldr	r3, [pc, #152]	@ (80003c8 <main+0xd8>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	4a25      	ldr	r2, [pc, #148]	@ (80003c8 <main+0xd8>)
 8000334:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000338:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~ (1U<<21); //set bit 21 to 0
 800033a:	4b23      	ldr	r3, [pc, #140]	@ (80003c8 <main+0xd8>)
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	4a22      	ldr	r2, [pc, #136]	@ (80003c8 <main+0xd8>)
 8000340:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8000344:	6013      	str	r3, [r2, #0]

	//PD13
	GPIOD->MODER |= (1U<<26); //set bit 20 to 1
 8000346:	4b20      	ldr	r3, [pc, #128]	@ (80003c8 <main+0xd8>)
 8000348:	681b      	ldr	r3, [r3, #0]
 800034a:	4a1f      	ldr	r2, [pc, #124]	@ (80003c8 <main+0xd8>)
 800034c:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000350:	6013      	str	r3, [r2, #0]
	GPIOD->MODER &=~ (1U<<27); //set bit 21 to 0
 8000352:	4b1d      	ldr	r3, [pc, #116]	@ (80003c8 <main+0xd8>)
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	4a1c      	ldr	r2, [pc, #112]	@ (80003c8 <main+0xd8>)
 8000358:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 800035c:	6013      	str	r3, [r2, #0]

	while(1)
	{
		/* toggle pin high/low */
		GPIOB->ODR ^= LED3_PIN;
 800035e:	4b19      	ldr	r3, [pc, #100]	@ (80003c4 <main+0xd4>)
 8000360:	695b      	ldr	r3, [r3, #20]
 8000362:	4a18      	ldr	r2, [pc, #96]	@ (80003c4 <main+0xd4>)
 8000364:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
 8000368:	6153      	str	r3, [r2, #20]
		for(int i =0; i<500000; i++) {}
 800036a:	2300      	movs	r3, #0
 800036c:	60fb      	str	r3, [r7, #12]
 800036e:	e002      	b.n	8000376 <main+0x86>
 8000370:	68fb      	ldr	r3, [r7, #12]
 8000372:	3301      	adds	r3, #1
 8000374:	60fb      	str	r3, [r7, #12]
 8000376:	68fb      	ldr	r3, [r7, #12]
 8000378:	4a14      	ldr	r2, [pc, #80]	@ (80003cc <main+0xdc>)
 800037a:	4293      	cmp	r3, r2
 800037c:	ddf8      	ble.n	8000370 <main+0x80>

		GPIOD->ODR ^= LED2_PIN;
 800037e:	4b12      	ldr	r3, [pc, #72]	@ (80003c8 <main+0xd8>)
 8000380:	695b      	ldr	r3, [r3, #20]
 8000382:	4a11      	ldr	r2, [pc, #68]	@ (80003c8 <main+0xd8>)
 8000384:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8000388:	6153      	str	r3, [r2, #20]
		for(int i =0; i<500000; i++) {}
 800038a:	2300      	movs	r3, #0
 800038c:	60bb      	str	r3, [r7, #8]
 800038e:	e002      	b.n	8000396 <main+0xa6>
 8000390:	68bb      	ldr	r3, [r7, #8]
 8000392:	3301      	adds	r3, #1
 8000394:	60bb      	str	r3, [r7, #8]
 8000396:	68bb      	ldr	r3, [r7, #8]
 8000398:	4a0c      	ldr	r2, [pc, #48]	@ (80003cc <main+0xdc>)
 800039a:	4293      	cmp	r3, r2
 800039c:	ddf8      	ble.n	8000390 <main+0xa0>

		GPIOD->ODR ^= LED1_PIN;
 800039e:	4b0a      	ldr	r3, [pc, #40]	@ (80003c8 <main+0xd8>)
 80003a0:	695b      	ldr	r3, [r3, #20]
 80003a2:	4a09      	ldr	r2, [pc, #36]	@ (80003c8 <main+0xd8>)
 80003a4:	f483 6380 	eor.w	r3, r3, #1024	@ 0x400
 80003a8:	6153      	str	r3, [r2, #20]
		for(int i =0; i<500000; i++) {}
 80003aa:	2300      	movs	r3, #0
 80003ac:	607b      	str	r3, [r7, #4]
 80003ae:	e002      	b.n	80003b6 <main+0xc6>
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	3301      	adds	r3, #1
 80003b4:	607b      	str	r3, [r7, #4]
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a04      	ldr	r2, [pc, #16]	@ (80003cc <main+0xdc>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	ddf8      	ble.n	80003b0 <main+0xc0>
		GPIOB->ODR ^= LED3_PIN;
 80003be:	e7ce      	b.n	800035e <main+0x6e>
 80003c0:	58024400 	.word	0x58024400
 80003c4:	58020400 	.word	0x58020400
 80003c8:	58020c00 	.word	0x58020c00
 80003cc:	0007a11f 	.word	0x0007a11f

080003d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003d0:	480d      	ldr	r0, [pc, #52]	@ (8000408 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003d2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003d8:	480c      	ldr	r0, [pc, #48]	@ (800040c <LoopForever+0x6>)
  ldr r1, =_edata
 80003da:	490d      	ldr	r1, [pc, #52]	@ (8000410 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003dc:	4a0d      	ldr	r2, [pc, #52]	@ (8000414 <LoopForever+0xe>)
  movs r3, #0
 80003de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003e0:	e002      	b.n	80003e8 <LoopCopyDataInit>

080003e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003e6:	3304      	adds	r3, #4

080003e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003ec:	d3f9      	bcc.n	80003e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003ee:	4a0a      	ldr	r2, [pc, #40]	@ (8000418 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003f0:	4c0a      	ldr	r4, [pc, #40]	@ (800041c <LoopForever+0x16>)
  movs r3, #0
 80003f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003f4:	e001      	b.n	80003fa <LoopFillZerobss>

080003f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003f8:	3204      	adds	r2, #4

080003fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003fc:	d3fb      	bcc.n	80003f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003fe:	f000 f811 	bl	8000424 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000402:	f7ff ff75 	bl	80002f0 <main>

08000406 <LoopForever>:

LoopForever:
  b LoopForever
 8000406:	e7fe      	b.n	8000406 <LoopForever>
  ldr   r0, =_estack
 8000408:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800040c:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8000410:	24000000 	.word	0x24000000
  ldr r2, =_sidata
 8000414:	0800048c 	.word	0x0800048c
  ldr r2, =_sbss
 8000418:	24000000 	.word	0x24000000
  ldr r4, =_ebss
 800041c:	2400001c 	.word	0x2400001c

08000420 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000420:	e7fe      	b.n	8000420 <ADC1_2_IRQHandler>
	...

08000424 <__libc_init_array>:
 8000424:	b570      	push	{r4, r5, r6, lr}
 8000426:	4d0d      	ldr	r5, [pc, #52]	@ (800045c <__libc_init_array+0x38>)
 8000428:	4c0d      	ldr	r4, [pc, #52]	@ (8000460 <__libc_init_array+0x3c>)
 800042a:	1b64      	subs	r4, r4, r5
 800042c:	10a4      	asrs	r4, r4, #2
 800042e:	2600      	movs	r6, #0
 8000430:	42a6      	cmp	r6, r4
 8000432:	d109      	bne.n	8000448 <__libc_init_array+0x24>
 8000434:	4d0b      	ldr	r5, [pc, #44]	@ (8000464 <__libc_init_array+0x40>)
 8000436:	4c0c      	ldr	r4, [pc, #48]	@ (8000468 <__libc_init_array+0x44>)
 8000438:	f000 f818 	bl	800046c <_init>
 800043c:	1b64      	subs	r4, r4, r5
 800043e:	10a4      	asrs	r4, r4, #2
 8000440:	2600      	movs	r6, #0
 8000442:	42a6      	cmp	r6, r4
 8000444:	d105      	bne.n	8000452 <__libc_init_array+0x2e>
 8000446:	bd70      	pop	{r4, r5, r6, pc}
 8000448:	f855 3b04 	ldr.w	r3, [r5], #4
 800044c:	4798      	blx	r3
 800044e:	3601      	adds	r6, #1
 8000450:	e7ee      	b.n	8000430 <__libc_init_array+0xc>
 8000452:	f855 3b04 	ldr.w	r3, [r5], #4
 8000456:	4798      	blx	r3
 8000458:	3601      	adds	r6, #1
 800045a:	e7f2      	b.n	8000442 <__libc_init_array+0x1e>
 800045c:	08000484 	.word	0x08000484
 8000460:	08000484 	.word	0x08000484
 8000464:	08000484 	.word	0x08000484
 8000468:	08000488 	.word	0x08000488

0800046c <_init>:
 800046c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800046e:	bf00      	nop
 8000470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000472:	bc08      	pop	{r3}
 8000474:	469e      	mov	lr, r3
 8000476:	4770      	bx	lr

08000478 <_fini>:
 8000478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800047a:	bf00      	nop
 800047c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800047e:	bc08      	pop	{r3}
 8000480:	469e      	mov	lr, r3
 8000482:	4770      	bx	lr
