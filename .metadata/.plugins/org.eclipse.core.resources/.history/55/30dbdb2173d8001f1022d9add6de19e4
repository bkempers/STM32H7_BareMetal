//led pin mapping
// LD1 (green): PD10 or PA5
// LD2 (yellow): PD13
// LD3 (red): PB7

#define PERIPHERAL_BASE       (0x40000000UL)
#define AHB4_PERIPH_OFFSET    (0x18020000UL)
#define AHB4_PERIPH_BASE      (PERIPHERAL_BASE + AHB4_PERIPH_OFFSET)

#define GPIOA_OFFSET          (0x0000UL)
#define GPIOA_BASE            (AHB4_PERIPH_BASE + GPIOA_OFFSET)

#define GPIOB_OFFSET          (0x0400UL)
#define GPIOB_BASE            (AHB4_PERIPH_BASE + GPIOB_OFFSET)

#define GPIOC_OFFSET          (0x0800UL)

#define GPIOD_OFFSET          (0x0C00UL)
#define GPIOD_BASE            (AHB4_PERIPH_BASE + GPIOD_OFFSET)

#define RCC_OFFSET            (0x4400UL)
#define RCC_BASE              (AHB4_PERIPH_BASE + RCC_OFFSET)

#define AHB4EN_R_OFFSET       (0x140UL)
#define RCC_AHB4EN_R          (* (volatile unsigned int *)(RCC_BASE + AHB4EN_R_OFFSET))

#define GPIO_MODER_OFFSET     (0x00UL)
#define GPIO_A_MODE_R         (* (volatile unsigned int *)(GPIOA_BASE + GPIO_MODER_OFFSET))
#define GPIO_D_MODE_R         (* (volatile unsigned int *)(GPIOD_BASE + GPIO_MODER_OFFSET))

#define GPIO_ODR_OFFSET       (0x14UL)
#define GPIO_A_OD_R           (* (volatile unsigned int *)(GPIOA_BASE + GPIO_ODR_OFFSET))
#define GPIO_D_OD_R           (* (volatile unsigned int *)(GPIOD_BASE + GPIO_ODR_OFFSET))

#define GPIOAEN               (1U<<0)
#define GPIOBEN               (1U<<1)
#define GPIOCEN               (1U<<2)
#define GPIODEN               (1U<<3)

#define PIN5                  (1U<<5)
#define LED1_PIN              (PIN5) //if using PA5?? or would be PD10

/**
 * (1U<<10) set bit 10 to 1
 * &=~ (1U<<11) set bit 11 to 0
 */

int main()
{
	/* enable clock access for gpio */
	RCC_AHB4EN_R |= GPIODEN;

	/* set PXN as output pin */
	GPIO_D_MODE_R |= (1U<<10); //set bit 10 to 1
	GPIO_D_MODE_R &=~ (1U<<11); //set bit 11 to 0

	while(1)
	{
		/* set pin high */
		//GPIO_A_OD_R |= LED1_PIN;

		/* toggle pin high/low */
		GPIO_D_OD_R ^= LED1_PIN;
		for(int i =0; i<1000000; i++) {}
	}

	return 1;
}
